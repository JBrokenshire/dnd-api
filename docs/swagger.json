{
    "swagger": "2.0",
    "info": {
        "description": "A management solution for Dungeons \u0026 Dragons character sheet information",
        "title": "D\u0026D Character Dashboard",
        "contact": {
            "name": "Jared Brokenshire",
            "email": "jbrokenshire0306@gmail.com"
        },
        "version": "0.0.1"
    },
    "basePath": "/",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Log a user in",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth Actions"
                ],
                "summary": "User Login",
                "operationId": "auth-login",
                "parameters": [
                    {
                        "description": "User's credentials",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "get": {
                "description": "Set's the refresh cookie to an expired date and clears token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth Actions"
                ],
                "summary": "Log User Out",
                "operationId": "auth-logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "get": {
                "description": "Perform refresh access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth Actions"
                ],
                "summary": "Refresh access token",
                "operationId": "auth-refresh",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.RefreshResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/characters": {
            "get": {
                "description": "List characters (paginated)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Character Actions"
                ],
                "summary": "List characters",
                "operationId": "characters-list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search characters by name",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "The page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "The numbers of items to return. Max 100",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.CharacterPaginatedResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create character",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Character Actions"
                ],
                "summary": "Create character",
                "operationId": "characters-create",
                "parameters": [
                    {
                        "description": "Character information",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateCharacterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.CharacterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/characters/{id}": {
            "get": {
                "description": "Get character by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Character Actions"
                ],
                "summary": "Get character by ID",
                "operationId": "characters-get",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Character ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.CharacterResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update character",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Character Actions"
                ],
                "summary": "Update character",
                "operationId": "characters-update",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Character ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Character information",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateCharacterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.CharacterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete character",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Character Actions"
                ],
                "summary": "Delete character",
                "operationId": "characters-delete",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Character ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/classes": {
            "get": {
                "description": "List classes (paginated)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Class Actions"
                ],
                "summary": "List classes",
                "operationId": "classes-list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search classes by name",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "The page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "The numbers of items to return. Max 100",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.ClassPaginatedResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create class",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Class Actions"
                ],
                "summary": "Create class",
                "operationId": "classes-create",
                "parameters": [
                    {
                        "description": "Class information",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateClassRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.ClassResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/classes/{id}": {
            "get": {
                "description": "Get class by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Class Actions"
                ],
                "summary": "Get class by ID",
                "operationId": "classes-get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.ClassResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "put": {
                "description": "Update class",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Class Actions"
                ],
                "summary": "Update class",
                "operationId": "classes-update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Class ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Class information",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateClassRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.ClassResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete class",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Class Actions"
                ],
                "summary": "Delete class",
                "operationId": "classes-delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Class ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/races": {
            "get": {
                "description": "List races (paginated)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Race Actions"
                ],
                "summary": "List races",
                "operationId": "races-list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search races by name",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "The page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "The numbers of items to return. Max 100",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.RacePaginatedResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create race",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Race Actions"
                ],
                "summary": "Create race",
                "operationId": "races-create",
                "parameters": [
                    {
                        "description": "Race information",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateRaceRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.RaceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/races/{id}": {
            "get": {
                "description": "Get race by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Race Actions"
                ],
                "summary": "Get race by ID",
                "operationId": "races-get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.RaceResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "put": {
                "description": "Update race",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Race Actions"
                ],
                "summary": "Update race",
                "operationId": "races-update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Race ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Race information",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdateRaceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.RaceResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete race",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Race Actions"
                ],
                "summary": "Delete race",
                "operationId": "races-delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Race ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Data"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "Create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User Auth Actions"
                ],
                "summary": "Create user",
                "operationId": "users-create",
                "parameters": [
                    {
                        "description": "User information",
                        "name": "params",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.LoginUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/responses.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "requests.CreateCharacterRequest": {
            "type": "object",
            "required": [
                "class_id",
                "name",
                "race_id"
            ],
            "properties": {
                "class_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 200
                },
                "race_id": {
                    "type": "integer"
                }
            }
        },
        "requests.CreateClassRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 200,
                    "example": "Barbarian"
                }
            }
        },
        "requests.CreateRaceRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 200,
                    "example": "Barbarian"
                }
            }
        },
        "requests.CreateUserRequest": {
            "type": "object",
            "required": [
                "confirm_password",
                "password",
                "username"
            ],
            "properties": {
                "confirm_password": {
                    "type": "string",
                    "maxLength": 72
                },
                "password": {
                    "type": "string",
                    "maxLength": 72
                },
                "username": {
                    "type": "string",
                    "maxLength": 200
                }
            }
        },
        "requests.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "requests.UpdateCharacterRequest": {
            "type": "object",
            "required": [
                "class_id",
                "name",
                "race_id"
            ],
            "properties": {
                "class_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 200
                },
                "race_id": {
                    "type": "integer"
                }
            }
        },
        "requests.UpdateClassRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 200,
                    "example": "Barbarian"
                }
            }
        },
        "requests.UpdateRaceRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 200,
                    "example": "Barbarian"
                }
            }
        },
        "responses.CharacterPaginatedResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.CharacterResponse"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/responses.ResponseMeta"
                }
            }
        },
        "responses.CharacterResponse": {
            "type": "object",
            "properties": {
                "class": {
                    "$ref": "#/definitions/responses.ClassResponse"
                },
                "class_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "race": {
                    "$ref": "#/definitions/responses.RaceResponse"
                },
                "race_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "responses.ClassPaginatedResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.ClassResponse"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/responses.ResponseMeta"
                }
            }
        },
        "responses.ClassResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "responses.Data": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "responses.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "responses.LoginResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "authorised": {
                    "type": "boolean"
                },
                "enabled": {
                    "description": "Does the user have 2FA enabled?",
                    "type": "boolean"
                },
                "exp": {
                    "type": "integer"
                }
            }
        },
        "responses.LoginUserResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "responses.RacePaginatedResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/responses.RaceResponse"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/responses.ResponseMeta"
                }
            }
        },
        "responses.RaceResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "responses.RefreshResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "exp": {
                    "type": "integer"
                },
                "user_data": {
                    "$ref": "#/definitions/responses.LoginUserResponse"
                }
            }
        },
        "responses.ResponseMeta": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "example": 3
                },
                "page_size": {
                    "type": "integer",
                    "example": 25
                },
                "total_count": {
                    "type": "integer",
                    "example": 300
                }
            }
        }
    }
}